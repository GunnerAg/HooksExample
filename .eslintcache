[{"C:\\Users\\Gunner\\Desktop\\react practice\\pokedex\\src\\index.js":"1","C:\\Users\\Gunner\\Desktop\\react practice\\pokedex\\src\\reportWebVitals.js":"2","C:\\Users\\Gunner\\Desktop\\react practice\\pokedex\\src\\App.js":"3","C:\\Users\\Gunner\\Desktop\\react practice\\pokedex\\src\\components\\ErrorPage.js":"4","C:\\Users\\Gunner\\Desktop\\react practice\\pokedex\\src\\components\\PokeDetails.js":"5"},{"size":590,"mtime":1607342390307,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":956,"mtime":1607351824280,"results":"9","hashOfConfig":"7"},{"size":185,"mtime":1607351882372,"results":"10","hashOfConfig":"7"},{"size":805,"mtime":1607348675265,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"8q40i8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\Gunner\\Desktop\\react practice\\pokedex\\src\\index.js",[],["24","25"],"C:\\Users\\Gunner\\Desktop\\react practice\\pokedex\\src\\reportWebVitals.js",[],"C:\\Users\\Gunner\\Desktop\\react practice\\pokedex\\src\\App.js",["26"],"C:\\Users\\Gunner\\Desktop\\react practice\\pokedex\\src\\components\\ErrorPage.js",[],"C:\\Users\\Gunner\\Desktop\\react practice\\pokedex\\src\\components\\PokeDetails.js",["27","28","29"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\n\r\nexport default function PokeDetails(props) {\r\n\r\n    let [name, setName] = useState('');\r\n    let [image, setImage] = useState('');\r\n\r\n\r\n    // How we useEffect as component did update by not having an initial value (in line 19)\r\n    useEffect(()=>{\r\n        let id = props.match.params.id\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n          .then((res)=>{\r\n              const {sprites:{ other:{ dream_world } } } = res.data\r\n              setName(name=res.data.name)\r\n              setImage(image=dream_world.front_default)\r\n          })\r\n      })\r\n\r\n      console.log('HERE',name,image)\r\n    return (\r\n        <div>\r\n            <h1>{name}</h1>\r\n            <img src={image}/>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":16,"column":26,"nodeType":"36","endLine":16,"endColumn":42},{"ruleId":"34","severity":1,"message":"37","line":16,"column":28,"nodeType":"36","endLine":16,"endColumn":41},{"ruleId":"34","severity":1,"message":"38","line":17,"column":30,"nodeType":"36","endLine":17,"endColumn":55},{"ruleId":"39","severity":1,"message":"40","line":25,"column":13,"nodeType":"41","endLine":25,"endColumn":31},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","Assignments to the 'pokemons' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'name' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'image' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]